# get github repo size
curl -s https://api.github.com/repos/torvalds/linux | jq '.size' | numfmt --to=iec --from-unit=1024

# run strings on all files recursivly
for f in $(find . -type f); do s=$(strings $f | grep -i findme); if [[ $s ]] then echo "file $f s=$s";fi;done;

# find and remove empty dirs...
  for emptydir in $(du . -b -h -d 1 | grep -E '^0\s+' | awk '{print $2}');do echo "dir $emptydir";rm -fr $emptydir;done;

# Recursively find and replace in files
find . -type f -name "*.txt" -print0 | xargs -0 sed -i '' -e 's/foo/bar/g'

# get filesize by extension
{ find $(pwd) -type f -name "*.pack" -printf "%s+"; echo 0;} | bc | numfmt --to=si --suffix=B

# grep ipaddress regex
cat links3ips.txt | grep -E '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' -o > links3onlyips.txt

# find gits and pull
for gitdir in $(find . -maxdepth 2 -type d -name .git); do cd $gitdir; cd ..;remoteurl=$(git remote get-url --all origin); echo "in folder $(pwd) giturl: $remoteurl";git pull;   cd;done;
for gitdir in $(find . -maxdepth 2 -type d -name .git); do olddir=$(pwd); cd $gitdir; cd ..;remoteurl=$(git remote get-url --all origin); echo "in folder $(pwd) giturl: $remoteurl";git pull;   cd $olddir ;done;
for gitdir in $(find . -maxdepth 2 -type d -name .git); do pushd $(pwd); cd $gitdir; cd ..;remoteurl=$(git remote get-url --all origin); echo "in folder $(pwd) giturl: $remoteurl";git pull;   popd ;done;

# find print file size
find /home/kth/temp/gta/ -type f -name *.exe -exec ls -lh "{}" \;

# awk find grep print filename
find ~/temp/gta/ -type f -name '*.pdf*'  | sort | uniq | awk -F"/" '{print $NF}'

# nmap
sudo setcap cap_net_raw,cap_net_admin,cap_net_bind_service+eip /usr/local/bin/nmap

# ping arp
for ip in $(arp -an | sed  's/(//' | sed 's/)//' | awk '{print $2}'); do ping -c 3 $ip;done

binwalk -e -D 'squashfs:squashfs:7z x %e'

# journalctl logs
journalctl --vacuum-time=1weeks

# kill
ps aux | grep code | awk '{print $2}' | xargs kill -9 $1

# arp flush
watch -n 1 'sudo ip -s -s neigh flush all'
ip -s -s neigh flush all

# nmap output ip
nmap -p80 192.168.11.0/24 -oG -  | grep open | awk '{print $2}'
# nmap grep sed awk
nmap -oG -  192.168.1.0/24 -p22,80,443 -sV | egrep -v '^#' | egrep -v 'Status: Up' | egrep -v 'closed' | awk '{split($0,a,","); printf "%-20s\n", a[1]}' | sed -e 's/()//g' | sed -e 's/\// /g'

# find and rename
find /opt/omd -type f -iname "hires*" -print0 | xargs --null -I{} mv {} {}.renamed

# find but exclude path
find . -type f -not -path "./vvcadm/*"

# find exec grep string
find /etc -type f -exec grep -i 0gg3 {} \;
find /home/kth/ -type f -name "*.py" -print0  | xargs -0 -n1 grep -Hn 'import gi'

sudo netstat -nlpt| grep tcp | grep -Ev "127\.0\.0\.1|[^a-f0-9]::1"

# find search and replace string
find . -type f -iname *.vcxproj -exec sed -i 's/v141_xp/v141/g' {} \;


# update pip packages
sudo python3 -m pip install --upgrade pip
sudo pip3 freeze | cut -d'=' -f1 | xargs -n1 sudo pip3 install -U

# gray / elastic
curl -XGET 'http://192.168.99.200:9200/_cat/health?v'
curl -XGET 'http://192.168.99.200:9200/_cluster/state?pretty'
curl -XPUT 'http://192.168.99.200:9200/_cluster/settings' -H 'Content-Type: application/json' -d '{ "transient" : { "cluster.routing.allocation.disk.watermark.flood_stage" : "99%", "cluster.routing.allocation.disk.watermark.high" : "95%"}}'

# rename network interface
sudo ip link set wlxd037457f172b name wlan0

# gnome
killall -3 gnome-shell

# iptables foo
watch -n1 -d "sudo iptables -vnxL | grep -v -e pkts -e Chain | sort -nk1 | tac | column -t"


# openwrt
opkg list-upgradable | cut -f 1 -d ' ' | xargs opkg upgrade

##
iostat -dxk

# find all files with .yml extension, search and replace contents of earch file yml with yaml
find . -type f -name "*.yml" -exec sed -i'' -e 's/yml/yaml/g' {} +

# find executables
find . -perm /u=x,g=x,o=x
find . -executable
for i in `find -type f`; do [ -x $i ] && echo "$i is executable"; done


find ./ -type f -name "*" -not -name "*.o" -exec sh -c '
    case "$(head -n 1 "$1")" in
      ?ELF*) exit 0;;
      MZ*) exit 0;;
      #!*/ocamlrun*)exit0;;
    esac
exit 1
' sh {} \; -print
#
#export PS1="\[\033[38;5;33m\]\u\[$(tput sgr0)\]@\[$(tput sgr0)\]\[\033[38;5;46m\]\h\[$(tput sgr0)\]:\[$(tput sgr0)\]\[\033[38;5;2m\]\W\[$(tput sgr0)\]\\ >\[$(tput sgr0)\]"


# active gitforks bookmarklet
# javascript:location='https://techgaun.github.io/active-forks/index.html#'+window.location.href


# cron
for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done

# https://askubuntu.com/questions/421712/comparing-the-contents-of-two-directories
# diff compare stuff
find /dir1/ -type f -exec md5sum {} + | sort -k 2 > dir1.txt
find /dir2/ -type f -exec md5sum {} + | sort -k 2 > dir2.txt
diff -u dir1.txt dir2.txt
diff <(find /dir1/ -type f -exec md5sum {} + | sort -k 2) <(find /dir2/ -type f -exec md5sum {} + | sort -k 2)
diff <(find /dir1/ -type f -exec md5sum {} + | sort -k 2 | cut -f1 -d" ") <(find /dir2/ -type f -exec md5sum {} + | sort -k 2 | cut -f1 -d" ")
diff <(find /dir1/ -type f -exec md5sum {} + | sort -k 2 | sed 's/ .*\// /') <(find /dir2/ -type f -exec md5sum {} + | sort -k 2 | sed 's/ .*\// /')
git diff --no-index dir2/ dir2/


# bluetooth mouse fix
sudo modprobe uhid

# Print all columns:
awk '{print $0}' somefile
# Print all but the first column:
awk '{$1=""; print $0}' somefile
# Print all but the first two columns:
awk '{$1=$2=""; print $0}' somefile
